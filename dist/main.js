(()=>{"use strict";var __webpack_modules__={568:()=>{eval("\n;// CONCATENATED MODULE: ./src/data.js\n// localStorage.setItem();\n// localStorage.getItem();\n// localStorage.removeItem();\n// localStorage.key();\n// JSON.parse()\n// JSON.stringify()\n\nconst key = 'odin';\n// key: app name, JSON for each column\n// title, cards\nfunction saveColumnData(columns) {\n  // const savedData = localStorage.getItem(key);\n  const newCol = mapToObj(columns);\n  localStorage.setItem(key, JSON.stringify(newCol));\n  console.log('new data: ' + JSON.stringify(newCol));\n}\n\nfunction mapToObj(inputMap) {\n  let obj = {};\n\n  inputMap.forEach(function (value, key) {\n    obj[key] = value;\n  });\n\n  return obj;\n}\n\nfunction getColumnData() {\n  //   localStorage.clear();\n  const data = localStorage.getItem(key);\n  //   console.log(JSON.parse(data));\n  return JSON.parse(data);\n}\n\n// function getKeyByValue(object, value) {\n//   return Object.keys(object).find((key) => object[key] === value);\n// }\n\n// if (storageAvailable('localStorage')) {\n//   // Yippee! We can use localStorage awesomeness\n// } else {\n//   // Too bad, no localStorage for us\n// }\n\n// function storageAvailable(type) {\n//   let storage;\n//   try {\n//     storage = window[type];\n//     const x = '__storage_test__';\n//     storage.setItem(x, x);\n//     storage.removeItem(x);\n//     return true;\n//   } catch (e) {\n//     return (\n//       e instanceof DOMException &&\n//       // everything except Firefox\n//       (e.code === 22 ||\n//         // Firefox\n//         e.code === 1014 ||\n//         // test name field too, because code might not be present\n//         // everything except Firefox\n//         e.name === 'QuotaExceededError' ||\n//         // Firefox\n//         e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n//       // acknowledge QuotaExceededError only if there's something already stored\n//       storage &&\n//       storage.length !== 0\n//     );\n//   }\n// }\n\n;// CONCATENATED MODULE: ./src/column.js\n// import addColumnToDOM from './dom';\n\n\nlet columns = new Map();\n\nclass Column {\n  constructor(title) {\n    this.title = title;\n    this.cards = [];\n    // write to DOM\n    // addColumnToDOM(this.title);\n  }\n\n  addCard = (card) => this.cards.push(card);\n\n  removeCard = (cardToRemove) => {\n    const index = this.cards.indexOf(cardToRemove);\n    if (index > -1) {\n      this.cards.splice(index, 1);\n    }\n  };\n\n  changeTitle = (newTitle) => {\n    this.title = newTitle;\n  };\n}\n\nfunction getColumn(colName) {\n  return columns.get(colName);\n}\n\nfunction removeCardFromColumn(card, colName) {\n  const col = getColumn(colName);\n  col.removeCard(card);\n  saveColumnData(columns);\n}\n\nfunction addCardToColumn(card, colName) {\n  // get column\n  const column = getColumn(colName);\n  // console.log(column);\n  column.addCard(card);\n  saveColumnData(columns);\n}\n\nfunction getColNumber() {\n  return columns.size;\n}\n\nfunction createColumn(title) {\n  const col = new Column(title);\n  return col;\n}\n\nfunction initColumns(startColumnName, save = true) {\n  const col = createColumn(startColumnName);\n  columns.set(startColumnName, col);\n  if (save) saveColumnData(columns);\n  return col;\n}\n\n;// CONCATENATED MODULE: ./src/card.js\n\n\nlet cards = new Map();\n\nclass Card {\n  constructor(title, colName) {\n    this.title = title;\n    this.colName = colName;\n  }\n  //   title\n  //   description,\n  //   dueDate,\n  //   priority,\n  //   project,\n  //   column\n}\n\nfunction createCard(title, colName) {\n  const card = new Card(title, colName);\n  cards.set(title, card);\n  addCardToColumn(card, colName);\n  return card;\n}\n\nfunction removeCard(title) {\n  // get card\n  const card = cards.get(title);\n  console.log(card);\n  // get col\n  const colName = card.colName;\n  // remove card from column\n  removeCardFromColumn(card, colName);\n  // remove card from map\n  cards.delete(card.title);\n}\n\n;// CONCATENATED MODULE: ./src/dom.js\n\n// import addCardToColumn from './column';\n// import addCardToColumn from './index';\n\n// Objects\nlet activeForm = new Map();\n\n// hide add task button; button is used to create a form\n// to collect input form user on a new task\nfunction toggleAddTaskButton() {\n  const addTask = activeForm.get('addTaskButton');\n  if (addTask.classList.contains('hide')) {\n    addTask.classList.remove('hide');\n  } else {\n    addTask.classList.add('hide');\n  }\n}\n\nfunction removeForm() {\n  activeForm.get('card').remove();\n  activeForm.get('buttonContainer').remove();\n  toggleAddTaskButton();\n  activeForm.clear();\n}\n\nfunction cardDone(event) {\n  // get column\n  // remove card from column\n  removeCard(\n    event.target.parentNode\n      .querySelector('#title-input')\n      .getAttribute('data-title')\n  );\n  event.target.parentNode.parentNode.removeChild(event.target.parentNode);\n}\n\nfunction createCardDOM(card) {\n  //     <div class=\"to-do-card round\">\n  //     <input type=\"checkbox\" name=\"task-0\" />\n  //     <label for=\"task-0\">First task</label>\n  //   </div>\n  // create\n  const cardDiv = document.createElement('div');\n  const checkbox = document.createElement('input');\n  const title = document.createElement('input');\n  // add attributes\n  cardDiv.classList.add('to-do-card');\n  cardDiv.classList.add('round');\n  checkbox.setAttribute('type', 'checkbox');\n  title.setAttribute('id', 'title-input');\n  title.setAttribute('data-title', card.title);\n  // DOM\n  title.value = card.title;\n  // render\n  cardDiv.appendChild(checkbox);\n  cardDiv.appendChild(title);\n  // event listeners\n  checkbox.addEventListener('click', cardDone);\n  // save input change in card.js\n  return cardDiv;\n}\n\n//  Add card to column array\nfunction createNewCard(event) {\n  const dataColumn = event.target.parentNode.parentNode;\n  // console.log(event.target.parentNode.parentNode.getAttribute('data-column')); // add button\n  const cardTitle = document.getElementById('card-title');\n  const card = createCard(\n    cardTitle.value,\n    event.target.parentNode.parentNode.getAttribute('data-column')\n  );\n  // add card to HTML\n  const cardDOM = createCardDOM(card);\n  const children = dataColumn.getElementsByTagName('div');\n  // 1st child is name of column, second child is container for cards,\n  // last child is add task button\n  children[1].appendChild(cardDOM);\n  removeForm();\n}\n\nfunction loadCard(title, colName) {\n  // get parent node matching column name\n  const dataColumn = document.querySelector(`[data-column='${colName}']`);\n  console.log(dataColumn);\n  const card = createCard(title, colName);\n  // add card to HTML\n  const cardDOM = createCardDOM(card);\n  const children = dataColumn.getElementsByTagName('div');\n  // 1st child is name of column, second child is container for cards,\n  // last child is add task button\n  children[1].appendChild(cardDOM);\n}\n\nfunction cancelNewCard() {\n  removeForm();\n}\n\nfunction createCardForm(event) {\n  //     <div class=\"to-do-card\" id=\"form\">\n  //     <form method=\"get\">\n  //       <input placeholder=\"task name\" id=\"card-title\" required />\n  //     </form>\n  //   </div>\n  //   <div id=\"card-btns\">\n  //     <button id=\"card-cancel-btn\">Cancel</button>\n  //     <button type=\"submit\" id=\"card-add-btn\">Add</button>\n  //   </div>\n  const dataColumn = event.target.parentNode.getAttribute('data-column');\n  // console.log(dataColumn);\n  // console.log(\n  //   document.querySelector(`[data-column=${dataColumn}] button:first-of-type`)\n  // );\n  const columnParent = event.target.parentNode;\n  const card = document.createElement('div');\n  const formCard = document.createElement('form');\n  const inputTitle = document.createElement('input');\n  const buttonContainer = document.createElement('div');\n  const buttonCancel = document.createElement('button');\n  const buttonAdd = document.createElement('button');\n\n  // add inner html\n  buttonCancel.innerHTML = 'Cancel';\n  buttonAdd.innerHTML = 'Add';\n\n  // add classes\n  card.classList.add('to-do-card');\n  card.setAttribute('id', 'form');\n  inputTitle.setAttribute('placeholder', 'Task name');\n  inputTitle.setAttribute('id', 'card-title');\n  inputTitle.required = true;\n  inputTitle.setAttribute('autocomplete', 'off');\n  buttonContainer.setAttribute('id', 'card-btns');\n  buttonCancel.setAttribute('id', 'card-cancel-btn');\n  buttonAdd.setAttribute('type', 'submit');\n  buttonAdd.setAttribute('id', 'card-add-btn');\n\n  // append children\n  columnParent.appendChild(card);\n  card.appendChild(formCard);\n  formCard.appendChild(inputTitle);\n  columnParent.appendChild(buttonContainer);\n  buttonContainer.appendChild(buttonCancel);\n  buttonContainer.appendChild(buttonAdd);\n\n  // focus\n  inputTitle.focus();\n  inputTitle.addEventListener('keypress', (e) => {\n    if (e.key === 'Enter') {\n      // e.preventDefault();\n      createNewCard();\n    }\n  });\n\n  // button event listeners\n  buttonAdd.addEventListener('click', createNewCard);\n  buttonAdd.column = event.target.columnName;\n  buttonCancel.addEventListener('click', cancelNewCard);\n\n  // save active form in map\n  activeForm.set('card', card);\n  activeForm.set('buttonContainer', buttonContainer);\n  // document.querySelector(`[data-column='${dataColumn}'] button:first-of-type`)\n  activeForm.set(\n    'addTaskButton',\n    document.querySelector(`[data-column='${dataColumn}'] #add-task`)\n  );\n\n  // hide create new button (generates form)\n  toggleAddTaskButton();\n}\n\nfunction editTitle(event) {\n  console.log(event.target.innerHTML);\n}\n\nfunction addColumnToDOM(colObject) {\n  // <div data-column=\"0\" class=\"column\">\n  // <div class=\"column-title\">Inbox</div>\n  // <div id=\"column-cards\">\n  //   <div class=\"to-do-card round\">\n  //     <input type=\"checkbox\" name=\"task-0\" />\n  //     <label for=\"task-0\">First task</label>\n  //   </div>\n  // </div>\n  // <button class=\"add-task-btn\">+ add task</button>\n  // </div>\n  const columnContent = document.querySelector('.column-content');\n  // Create\n  const parentDiv = document.createElement('div');\n  const titleDiv = document.createElement('div');\n  const cardParentDiv = document.createElement('div');\n  const addButton = document.createElement('button');\n  // Add html\n  titleDiv.innerHTML = colObject.title;\n  addButton.innerHTML = '+ add task';\n  // Add attributes\n  parentDiv.setAttribute('data-column', colObject.title);\n  parentDiv.classList.add('column');\n  titleDiv.classList.add('column-title');\n  cardParentDiv.setAttribute('id', 'column-cards');\n  addButton.classList.add('add-task-btn');\n  addButton.setAttribute('id', 'add-task');\n  // Append\n  columnContent.appendChild(parentDiv);\n  parentDiv.appendChild(titleDiv);\n  parentDiv.appendChild(cardParentDiv);\n  parentDiv.appendChild(addButton);\n  // Listeners\n  // titleDiv.addEventListener('click', editTitle);\n  addButton.addEventListener('click', createCardForm);\n  addButton.columnName = colObject.title;\n}\n\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n// import { createCard } from './card';\n// import { initNewColumnButtons } from './add-new-column';\n\nfunction initNewColumnButtons() {\n  const addColButtons = document.querySelectorAll('.add-column-btn');\n  addColButtons.forEach((btn) => btn.addEventListener('click', addColumn));\n  // console.log(addColButtons.length);\n}\n\n// add a new column when click on DOM button\nfunction addColumn() {\n  // get col number\n  const newColumnName = 'List ' + getColNumber();\n  addColumnToDOM(initColumns(newColumnName));\n}\n\nfunction loadData() {\n  const data = getColumnData();\n  console.log(JSON.stringify(data));\n  if (data) {\n    // for each column, create column\n    for (const column in data) {\n      addColumnToDOM(initColumns(column, false));\n      console.log(data[column]['cards']);\n      data[column]['cards'].forEach((card) => {\n        console.log(card.title + ', ' + card.colName);\n        // create card\n        loadCard(card.title, card.colName);\n      });\n    }\n  } else {\n    const startColumnName = 'Inbox';\n    addColumnToDOM(initColumns(startColumnName));\n  }\n}\n\n// localStorage.clear();\n// addColumnToDOM(initColumns('T1'));\n// addColumnToDOM(initColumns('title_2'));\nloadData();\ninitNewColumnButtons();\n\n/*\nTODO:\n\n**Extended**\n\nPRIORITY\n- Expand new to do form w/ priority\n- changing color for different priorities\n\nPOLISH\n- Change column title with click\n-- Form add button create task (disabled if no text)\n- view all todos in each project (probably just the title and duedate)\n- expand a single todo to see/edit its details\n- delete a todo\n\nNAV\n- keep left column on screen - focus on 1 column\n-- scroll through with arrow keys\n\n- move columns\n- date-fns for formatting and manipulating dates and times.\n- User authentication\n- BaaS\n\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///568\n")}},__webpack_exports__={};__webpack_modules__[568]()})();