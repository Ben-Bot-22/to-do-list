{"version":3,"file":"main.js","mappings":"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","sources":["webpack://to-do-list/./src/column.js","webpack://to-do-list/./src/card.js","webpack://to-do-list/./src/dom.js","webpack://to-do-list/./src/index.js"],"sourcesContent":["// import addColumnToDOM from './dom';\n\nlet columns = new Map();\n\nclass Column {\n  constructor(title) {\n    this.title = title;\n    this.cards = [];\n    // write to DOM\n    // addColumnToDOM(this.title);\n  }\n\n  addCard = (card) => this.cards.push(card);\n\n  changeTitle = (newTitle) => {\n    this.title = newTitle;\n  };\n}\n\nfunction getColumn(colName) {\n  return columns.get(colName);\n}\n\nexport function addCardToColumn(card, colName) {\n  // get column\n  const column = getColumn(colName);\n  column.addCard(card);\n}\n\nfunction createColumn(title) {\n  const col = new Column(title);\n  // addColumnToDOM(col);\n  return col;\n}\n\nexport function initColumns(startColumnName) {\n  const col = createColumn(startColumnName);\n  columns.set(startColumnName, col);\n  return col;\n}\n","import { addCardToColumn } from './column';\n\nclass Card {\n  constructor(title) {\n    this.title = title;\n  }\n  //   title\n  //   description,\n  //   dueDate,\n  //   priority,\n  //   project,\n  //   column\n}\n\nexport default function createCard(title, colName) {\n  const card = new Card(title);\n  addCardToColumn(card, colName);\n  return card;\n}\n","import createCard from './card';\n// import addCardToColumn from './column';\n// import addCardToColumn from './index';\n\n// Objects\nlet activeForm = new Map();\n\n// hide add task button; button is used to create a form\n// to collect input form user on a new task\nfunction toggleAddTaskButton() {\n  const addTask = activeForm.get('addTaskButton');\n  if (addTask.classList.contains('hide')) {\n    addTask.classList.remove('hide');\n  } else {\n    addTask.classList.add('hide');\n  }\n}\n\nfunction removeForm() {\n  activeForm.get('card').remove();\n  activeForm.get('buttonContainer').remove();\n  toggleAddTaskButton();\n  activeForm.clear();\n}\n\nfunction createCardDOM(card) {\n  //     <div class=\"to-do-card round\">\n  //     <input type=\"checkbox\" name=\"task-0\" />\n  //     <label for=\"task-0\">First task</label>\n  //   </div>\n  // create\n  const cardDiv = document.createElement('div');\n  const checkbox = document.createElement('input');\n  const title = document.createElement('label');\n  // add attributes\n  cardDiv.classList.add('to-do-card');\n  cardDiv.classList.add('round');\n  checkbox.setAttribute('type', 'checkbox');\n  // DOM\n  title.innerHTML = card.title;\n  // render\n  cardDiv.appendChild(checkbox);\n  cardDiv.appendChild(title);\n  return cardDiv;\n}\n\n//  Add card to column array\nfunction createNewCard(event) {\n  const dataColumn = event.target.parentNode.parentNode;\n  // console.log(event.target.parentNode.parentNode.getAttribute('data-column')); // add button\n  const cardTitle = document.getElementById('card-title');\n  const card = createCard(\n    cardTitle.value,\n    event.target.parentNode.parentNode.getAttribute('data-column')\n  );\n  // add card to HTML\n  const cardDOM = createCardDOM(card);\n  const children = dataColumn.getElementsByTagName('div');\n  // 1st child is name of column, second child is container for cards,\n  // last child is add task button\n  children[1].appendChild(cardDOM);\n  removeForm();\n}\n\nfunction cancelNewCard() {\n  removeForm();\n}\n\nfunction createCardForm(event) {\n  //     <div class=\"to-do-card\" id=\"form\">\n  //     <form method=\"get\">\n  //       <input placeholder=\"task name\" id=\"card-title\" required />\n  //     </form>\n  //   </div>\n  //   <div id=\"card-btns\">\n  //     <button id=\"card-cancel-btn\">Cancel</button>\n  //     <button type=\"submit\" id=\"card-add-btn\">Add</button>\n  //   </div>\n  const dataColumn = event.target.parentNode.getAttribute('data-column');\n  // console.log(dataColumn);\n  // console.log(\n  //   document.querySelector(`[data-column=${dataColumn}] button:first-of-type`)\n  // );\n  const columnParent = event.target.parentNode;\n  const card = document.createElement('div');\n  const formCard = document.createElement('form');\n  const inputTitle = document.createElement('input');\n  const buttonContainer = document.createElement('div');\n  const buttonCancel = document.createElement('button');\n  const buttonAdd = document.createElement('button');\n\n  // add inner html\n  buttonCancel.innerHTML = 'Cancel';\n  buttonAdd.innerHTML = 'Add';\n\n  // add classes\n  card.classList.add('to-do-card');\n  card.setAttribute('id', 'form');\n  inputTitle.setAttribute('placeholder', 'Task name');\n  inputTitle.setAttribute('id', 'card-title');\n  inputTitle.required = true;\n  buttonContainer.setAttribute('id', 'card-btns');\n  buttonCancel.setAttribute('id', 'card-cancel-btn');\n  buttonAdd.setAttribute('type', 'submit');\n  buttonAdd.setAttribute('id', 'card-add-btn');\n\n  // append children\n  columnParent.appendChild(card);\n  card.appendChild(formCard);\n  formCard.appendChild(inputTitle);\n  columnParent.appendChild(buttonContainer);\n  buttonContainer.appendChild(buttonCancel);\n  buttonContainer.appendChild(buttonAdd);\n\n  // focus\n  inputTitle.focus();\n\n  // button event listeners\n  buttonAdd.addEventListener('click', createNewCard);\n  buttonAdd.column = event.target.columnName;\n  buttonCancel.addEventListener('click', cancelNewCard);\n\n  // save active form in map\n  activeForm.set('card', card);\n  activeForm.set('buttonContainer', buttonContainer);\n  activeForm.set(\n    'addTaskButton',\n    document.querySelector(`[data-column=${dataColumn}] button:first-of-type`)\n  );\n\n  // hide create new button (generates form)\n  toggleAddTaskButton();\n}\n\nexport default function addColumnToDOM(colObject) {\n  // <div data-column=\"0\" class=\"column\">\n  // <div class=\"column-title\">Inbox</div>\n  // <div id=\"column-cards\">\n  //   <div class=\"to-do-card round\">\n  //     <input type=\"checkbox\" name=\"task-0\" />\n  //     <label for=\"task-0\">First task</label>\n  //   </div>\n  // </div>\n  // <button class=\"add-task-btn\">+ add task</button>\n  // </div>\n  const columnContent = document.querySelector('.column-content');\n  // Create\n  const parentDiv = document.createElement('div');\n  const titleDiv = document.createElement('div');\n  const cardParentDiv = document.createElement('div');\n  const addButton = document.createElement('button');\n  // Add html\n  titleDiv.innerHTML = colObject.title;\n  addButton.innerHTML = '+ add task';\n  // Add attributes\n  parentDiv.setAttribute('data-column', colObject.title);\n  parentDiv.classList.add('column');\n  titleDiv.classList.add('column-title');\n  cardParentDiv.setAttribute('id', 'column-cards');\n  addButton.classList.add('add-task-btn');\n  // Append\n  columnContent.appendChild(parentDiv);\n  parentDiv.appendChild(titleDiv);\n  parentDiv.appendChild(cardParentDiv);\n  parentDiv.appendChild(addButton);\n  // Listeners\n  addButton.addEventListener('click', createCardForm);\n  addButton.columnName = colObject.title;\n}\n","import { initColumns as initColumn } from './column';\nimport addColumnToDOM from './dom';\n\nconst startColumnName = 'Inbox';\naddColumnToDOM(initColumn(startColumnName));\n\nconst test = 'Inbox 2';\naddColumnToDOM(initColumn(test));\n\n// # sourceMappingURL=/dist/app.js.map\n\n/*\nTODO:\n\n- Disappear on checkbox change (remove from dom & remove from column)\n-- make form submittal work on pressing enter\n\nDEBUG (2 column layout):\n- multiline columns\n- responsive design - hide first column\n\nNEW COLUMNS\n- Add new column button functionality\n-- Anonomous list counting (JS)\n-- Change column title with click\n-- Edit card by clicking on card\n\nPRIORITY\n- Expand new to do form w/ priority\n- changing color for different priorities\n\nSAVE\n- add some persistence to this todo app using the Web Storage API.\n- localStorage (docs here) allows you to save data on the user’s computer.\n- Set up a function that saves the projects (and todos) to localStorage\nevery time a new project (or todo) is created, and another function\nthat looks for that data in localStorage when your app is first loaded.\n\n-- Make sure your app doesn’t crash if the data you may want retrieve isn’t there!\n-- localStorage uses JSON to send and store data, and when you retrieve the data,\nit will also be in JSON format. Keep in mind you cannot store functions in JSON,\nso you’ll have to figure out how to add methods back to your object properties\nonce you fetch them.\n\n**Extended**\nPOLISH\n-- Form add button create task (disabled if no text)\n- view all todos in each project (probably just the title and duedate)\n- expand a single todo to see/edit its details\n- delete a todo\n\n- date-fns for formatting and manipulating dates and times.\n- User authentication\n- BaaS\n\n*/\n"],"names":["columns","Map","Column","constructor","title","this","cards","addCard","card","push","changeTitle","newTitle","initColumns","startColumnName","col","set","Card","activeForm","toggleAddTaskButton","addTask","get","classList","contains","remove","add","removeForm","clear","createNewCard","event","dataColumn","target","parentNode","cardDOM","cardDiv","document","createElement","checkbox","setAttribute","innerHTML","appendChild","createCardDOM","colName","column","getColumn","addCardToColumn","createCard","getElementById","value","getAttribute","getElementsByTagName","cancelNewCard","createCardForm","columnParent","formCard","inputTitle","buttonContainer","buttonCancel","buttonAdd","required","focus","addEventListener","columnName","querySelector","addColumnToDOM","colObject","columnContent","parentDiv","titleDiv","cardParentDiv","addButton"],"sourceRoot":""}